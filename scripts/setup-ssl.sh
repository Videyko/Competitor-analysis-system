#!/bin/bash
# setup-ssl.sh - –°–∫—Ä–∏–ø—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Let's Encrypt SSL

set -e

if [ -z "$1" ]; then
    echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./setup-ssl.sh <–¥–æ–º–µ–Ω> [email]"
    echo "–ü—Ä–∏–∫–ª–∞–¥: ./setup-ssl.sh example.com admin@example.com"
    exit 1
fi

DOMAIN="$1"
EMAIL="${2:-admin@$DOMAIN}"

echo "üîí –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Let's Encrypt SSL –¥–ª—è –¥–æ–º–µ–Ω—É: $DOMAIN"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –ø—Ä–∞—Ü—é—î nginx
if ! docker-compose ps nginx | grep -q "Up"; then
    echo "‚ùå Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∏—Å—Ç–µ–º—É —Å–ø–æ—á–∞—Ç–∫—É: ./scripts/deploy.sh"
    exit 1
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è certbot
docker-compose exec nginx mkdir -p /var/www/certbot

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É
echo "üìú –û—Ç—Ä–∏–º–∞–Ω–Ω—è SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É..."
docker run --rm \
    -v ./nginx/ssl:/etc/letsencrypt \
    -v ./nginx/www:/var/www/certbot \
    certbot/certbot \
    certonly --webroot \
    -w /var/www/certbot \
    -d $DOMAIN \
    --email $EMAIL \
    --agree-tos \
    --no-eff-email

# –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—ñ–≤
if [ -f "./nginx/ssl/live/$DOMAIN/fullchain.pem" ]; then
    cp "./nginx/ssl/live/$DOMAIN/fullchain.pem" "./nginx/ssl/cert.pem"
    cp "./nginx/ssl/live/$DOMAIN/privkey.pem" "./nginx/ssl/key.pem"
    
    # –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è nginx
    docker-compose restart nginx
    
    echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
    echo "üîÑ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞–π—Ç–µ –¥–æ crontab:"
    echo "0 12 * * * /path/to/project/scripts/renew-ssl.sh"
else
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—É"
    exit 1
fi